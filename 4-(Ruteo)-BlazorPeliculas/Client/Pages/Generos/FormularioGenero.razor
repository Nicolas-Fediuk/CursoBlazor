@inject SweetAlertService swal
<NavigationLock OnBeforeInternalNavigation="OnBeforeInternalNavigation"></NavigationLock>

@*OnSubmit="Crear" para solo enviarlo, simpre permite el posteo del formulario*@
@*OnValidSubmit="Crear" para tambien validarlo, permite el posteo del formulario
  cuando cumpla con todos los requerimientos
*@

@*Metodo comun*@
@*<EditForm Model="genero" OnValidSubmit="OnValidSubmit">*@

@*un objeto donde puedo consultar el estado del formulario
<EditForm EditContext="" OnValidSubmit="OnValidSubmit">*@

<EditForm EditContext="editContext" OnValidSubmit="OnValidSubmit">
    @* para que tome las validaciones *@
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label>Nombre:</label>
        <div>
            <InputText class="form-control" @bind-Value="@genero.Nombre"/>
            <ValidationMessage For="@(() => genero.Nombre)"/>
        </div>
    </div>

    <button class="btn btn-success" type="submit">Guardar cambios</button>
</EditForm>

@code {
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new(genero);
    }

    [EditorRequired]
    [Parameter]
    public Genero genero { get; set; }

    [EditorRequired]
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    public bool FormularioPosteadoConExito { get; set; } = false;

    private async Task OnBeforeInternalNavigation(LocationChangingContext context)
    {
        var formularioFueEditado = editContext.IsModified();

        if (!formularioFueEditado)
        {
            return;
        }

        if (FormularioPosteadoConExito)
        {
            return;
        }

        var resultado = await swal.FireAsync(new SweetAlertOptions
        {
            Title = "Confirmacion",
            Text = "Abandonar la pagina?",
            Icon = SweetAlertIcon.Warning,
            ShowCancelButton = true
        });

        var confirmado = !string.IsNullOrEmpty(resultado.Value);

        if (confirmado)
        {
            return;
        }

        //para no dejar salir al usuario de la pagina
        context.PreventNavigation();
    }
}
